global:
## Override the deployment namespace
#   namespaceOverride:

image:
  repository: 790762862953.dkr.ecr.eu-west-2.amazonaws.com/ecr-public/aws-observability/aws-for-fluent-bit
  tag: 2.32.0
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  ## Allow the service to be exposed for monitoring
  ## https://docs.fluentbit.io/manual/administration/monitoring
  # extraService: |
  #   HTTP_Server  On
  #   HTTP_Listen  0.0.0.0
  #   HTTP_PORT    2020
  parsersFiles:
    - /fluent-bit/parsers/parsers.conf
    - /fluent-bit/parsers/parsers_extra.conf
  extraParsers: |
    [PARSER]
      Name    kube-app
      Format  regex
      Regex   (?<tag>[^.]+)?\.?(?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)\.log$

input:
  enabled: false

rbac:
  pspEnabled: false
  
additionalInputs: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        DB                /var/log/flb_kube.db
        multiline.parser  cri
        Mem_Buf_Limit     50MB
        Refresh_Interval  10
        exclude_path      /var/log/containers/*-log-fetcher-*.log
        Buffer_Chunk_Size 255k
        Buffer_Max_Size   10MB

    [INPUT]
        Name              tail
        Tag               app.*
        Path              /var/log/containers/*-log-fetcher-*.log
        DB                /var/log/flb_app.db
        multiline.parser  cri
        Mem_Buf_Limit     50MB
        Refresh_Interval  10
        Buffer_Chunk_Size 255k
        Buffer_Max_Size   10MB


filter:
  match: "kube.*"
  kubeURL: "https://kubernetes.default.svc.cluster.local:443"
  mergeLog: "On"
  mergeLogKey: "data"
  keepLog: "On"
  k8sLoggingParser: "On"
  k8sLoggingExclude: "On"
  # extraFilters: |
  #   ...

additionalFilters: |
    [FILTER]
        Name                kubernetes
        Match               app.*
        Kube_URL            https://kubernetes.default.svc.cluster.local:443
        Merge_Log           On
        Merge_Log_Key       data
        Keep_Log            On
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Buffer_Size         5MB
        Kube_Tag_Prefix     app.var.log.containers.
    [FILTER]
        name                  multiline
        match                 kube.*
        multiline.parser      go, java
        multiline.key_content log
    [FILTER]
        Name         parser
        Match        app.*
        Key_Name     message
        Parser       json
        Reserve_data On  
    [FILTER]
        Name       record_modifier
        Match      app.*
        Remove_key logtag
        Remove_key stream
    [FILTER]
        Name        nest
        Match       app.*
        Operation   nest
        Nest_under  kubernetes
        Wildcard    app_log_file*

cloudWatch:
  enabled: true
  match: "kube.*"
  region: ${region}
  logGroupName: "$(kubernetes['namespace_name'])-$(kubernetes['container_name'])-output"
  logStreamName: "$(kubernetes['pod_name'])"
  logStreamPrefix: 
  logKey: log
  # By default, the whole log record will be sent to CloudWatch. 
  # If you specify a key name with this option, then only the value of that key 
  # will be sent to CloudWatch.
  logFormat:
  logRetentionDays: ${log_retention_in_days}
  roleArn:
  autoCreateGroup: true
  endpoint:
  credentialsEndpoint: {}
  extraOutputs: |
    Retry_Limit False

cloudWatchLogs:
  enabled: false
firehose:
  enabled: false

kinesis:
  enabled: false

elasticsearch:
  enabled: false

additionalOutputs: |
    [OUTPUT]
        Name                  cloudwatch
        Match                 app.*
        region                ${region}
        log_group_name        $(kubernetes['namespace_name'])-$(kubernetes['labels']['app.kubernetes.io/instance'])/$(kubernetes['app_log_file'])
        log_stream_name       $(kubernetes['pod_name'])
        log_key               log
        log_retention_days    90
        auto_create_group     true
        Retry_Limit           False

serviceAccount:
  create: true
  annotations: 
    eks.amazonaws.com/role-arn: ${iam_role_arn}
  name: fluentbit

resources:
  limits:
    memory: 250Mi
  requests:
    cpu: 100m
    memory: 250Mi

updateStrategy:
  type: RollingUpdate

nodeSelector: {}

tolerations: []

affinity: {}

annotations: {}
  # iam.amazonaws.com/role: arn:aws:iam::123456789012:role/role-for-fluent-bit

env: []


volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers

volumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true

serviceMonitor:
  service: 
    type: ClusterIP
    port: 2020
    targetPort: 2020
    extraPorts: []
      # - port: 2021
      #   targetPort: 2021
      #   protocol: TCP
      #   name: metrics
  ## When set true then use a ServiceMonitor to configure scraping
  enabled: ${serviceMonitorEnabled}
  interval: 30s
  telemetryPath: /api/v1/metrics/prometheus
  labels:
    release: prometheus
  timeout: 10s
  relabelings: []
  targetLabels: []
  metricRelabelings: []
  extraEndpoints: []
    # - port: metrics
    #   path: /metrics
    #   interval: 30s
    #   scrapeTimeout: 10s
    #   scheme: http